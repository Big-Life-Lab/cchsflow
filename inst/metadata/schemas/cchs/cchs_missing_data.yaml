schema_version: "1.0.0"
schema_date: "2025-01-20"
description: "CCHS missing data patterns and transformation rules"

# ============================================================================
# MISSING DATA PATTERN DEFINITIONS
# ============================================================================
pattern_definitions:
  patterns:
    single_digit_missing:
      description: "Binary/ternary variables with valid responses 1-5"
      missing_codes: [6, 7, 8, 9]
      transformation_map:
        6: "haven::tagged_na('a')"  # Not applicable
        7: "haven::tagged_na('b')"  # Don't know
        8: "haven::tagged_na('b')"  # Refusal
        9: "haven::tagged_na('b')"  # Not stated
      priority_hierarchy:
        not_applicable:
          priority: 1
          label: "Not applicable"
          original_codes: [6]
          tagged_na: ["a"]
        missing_data:
          priority: 2
          label: "Missing data"
          original_codes: [7, 8, 9]
          tagged_na: ["b"]
    
    double_digit_missing:
      description: "Multi-category scales with valid responses 1-95"
      missing_codes: [96, 97, 98, 99]
      transformation_map:
        96: "haven::tagged_na('a')"  # Not applicable
        97: "haven::tagged_na('b')"  # Don't know
        98: "haven::tagged_na('b')"  # Refusal
        99: "haven::tagged_na('b')"  # Not stated
      priority_hierarchy:
        not_applicable:
          priority: 1
          label: "Not applicable"
          original_codes: [96]
          tagged_na: ["a"]
        missing_data:
          priority: 2
          label: "Missing data"
          original_codes: [97, 98, 99]
          tagged_na: ["b"]
    
    triple_digit_missing:
      description: "Continuous measurements with variable-specific valid ranges"
      missing_codes: [996, 997, 998, 999]
      decimal_variations: [999.6, 999.7, 999.8, 999.9]  # Early cycles
      transformation_map:
        996: "haven::tagged_na('a')"  # Not applicable
        997: "haven::tagged_na('b')"  # Don't know
        998: "haven::tagged_na('b')"  # Refusal
        999: "haven::tagged_na('b')"  # Not stated
        999.6: "haven::tagged_na('a')"  # Not applicable (decimal)
        999.7: "haven::tagged_na('b')"  # Don't know (decimal)
        999.8: "haven::tagged_na('b')"  # Refusal (decimal)
        999.9: "haven::tagged_na('b')"  # Not stated (decimal)
      priority_hierarchy:
        not_applicable:
          priority: 1
          label: "Not applicable"
          original_codes: [996]
          tagged_na: ["a"]
          decimal_codes: [999.6]
        missing_data:
          priority: 2
          label: "Missing data"
          original_codes: [997, 998, 999]
          tagged_na: ["b"]
          decimal_codes: [999.7, 999.8, 999.9]

# ============================================================================
# PROPAGATION RULES
# ============================================================================
propagation_rules:
  description: "Rules for how missing values flow through derived variable calculations"
  
  single_missing:
    rule: "Single missing code preserves original value"
    examples:
      - input: "height=997, weight=70"
        output: "997"
        logic: "Missing code flows through unchanged"
  
  multiple_missing_same_tier:
    rule: "Multiple missing_data codes convert to tagged_na('b')"
    rationale: "Semantic honesty - result is 'missing due to multiple missing inputs'"
    examples:
      - input: "height=997, weight=998"
        output: "tagged_na('b')"
        logic: "Combined missing → honest tagged_na"
      - input: "var1=997, var2=998, var3=999"
        output: "tagged_na('b')"
        logic: "Multiple missing_data → tagged_na('b')"
  
  mixed_tiers:
    rule: "Prioritize to highest tier, then propagate that tier's value"
    examples:
      - input: "height=996, weight=998"
        output: "996"
        logic: "not_applicable wins, propagate 996"
      - input: "height=996, weight=996"
        output: "996"
        logic: "Consistent not_applicable"

# ============================================================================
# EXCEPTION PATTERNS (Custom missing data patterns for non-standard variables)
# ============================================================================
exception_patterns:
  # Template for future custom patterns
  # PACA_1V_custom:
  #   description: "Physical Activity custom pattern"
  #   missing_codes: [0, 85, 76, 8300]
  #   transformation_map:
  #     0: "haven::tagged_na('a')"
  #     85: "haven::tagged_na('b')"
  #     76: "haven::tagged_na('b')"
  #     8300: "haven::tagged_na('b')"
  #   priority_hierarchy:
  #     not_applicable:
  #       label: "Not applicable"
  #       original_codes: [0]
  #       tagged_na: ["a"]
  #     missing_data:
  #       label: "Missing data"
  #       original_codes: [85, 76, 8300]
  #       tagged_na: ["b"]

# ============================================================================
# IMPLEMENTATION REFERENCE
# ============================================================================
implementation:
  primary_function: "preprocess_cchs_missing_codes"
  pattern_names: ["single_digit_missing", "double_digit_missing", "triple_digit_missing"]
  handler_factory: "create_missing_handler"
  propagation_function: "prioritize_missing_values"

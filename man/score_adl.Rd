% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adl.R, R/deprecated-aliases.R
\name{score_adl}
\alias{score_adl}
\alias{adl_score_5_fun}
\title{Enhanced ADL help score (count of tasks requiring help)}
\usage{
score_adl(ADL_01, ADL_02, ADL_03, ADL_04, ADL_05)

adl_score_5_fun(...)
}
\arguments{
\item{ADL_01, ADL_02, ADL_03, ADL_04, ADL_05}{ADL variables as in assess_adl()}
}
\value{
**Data Type**: Numeric count (0-5)
**Missing Data Handling**: 
- Returns `haven::tagged_na("a")` if any input is not applicable
- Returns `haven::tagged_na("b")` if any input is missing/invalid
**Values**: 0-5 representing count of tasks requiring help
}
\description{
**Purpose**: Count number of ADL tasks requiring help (0-5 scale) for granular functional assessment
**Method**: Sums "needs help" responses across 5 consistent ADL items
**Clinical Context**: Graduated disability measure for research and clinical assessment
}
\details{
**Transformation Warnings**:
⚠️ **CAUTION - Methodological Changes**: Count-based scoring provides more 
granular assessment than binary indicator but requires complete data for valid interpretation.

**Calculation Details**:
- Counts number of ADL tasks with "needs help" response (=1)
- Range: 0 (independent) to 5 (maximum dependence)
- Missing data in ANY item invalidates entire score
- Preserves not applicable semantics across all items
}
\note{
v3.0.0, last updated: 2025-06-30, status: active, Note: Enhanced scoring with comprehensive missing data validation
}
\examples{
# Scalar usage - No help needed (score = 0)
score_adl(2, 2, 2, 2, 2)

# Scalar usage - Help needed with 2 tasks (score = 2)
score_adl(1, 2, 1, 2, 2)

# Scalar usage - Complete dependence (score = 5)
score_adl(1, 1, 1, 1, 1)

# Vector processing with missing data and outliers
adl_01 <- c(1, 2, 2, 6, "NA(a)")  # Includes not applicable and missing
adl_02 <- c(2, 2, 1, 2, 7)        # Includes don't know
adl_03 <- c(2, 2, 2, 2, 2)
adl_04 <- c(2, 2, 2, 2, 2)
adl_05 <- c(2, 2, 2, 2, 2)
score_adl(adl_01, adl_02, adl_03, adl_04, adl_05)

# rec_with_table() integration for production use
\dontrun{
library(cchsflow)
result <- rec_with_table(
  data = cchs2015_2016_p,
  variables = "ADL_score_5",
  database_name = "cchs2015_2016_p"
)
head(result$ADL_score_5)
}

}
